@model NestAlbania.Repositories.Pagination.PaginatedList<NestAlbania.Data.Property>
@using NestAlbania.FilterHelpers

@{
    ViewData["Title"] = "Index";
    var page = Convert.ToInt32(ViewBag.Page);
    int no = ((page - 1) * 10);
    var currentSortOrder = ViewData["CurrentSortOrder"] as string;
}


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" integrity="sha384-B4gt1jrGC7Jh4AgTPSdUtOBvfO8sh/jk3DRfzx2Y8AChM/p5Q..." crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" integrity="sha512-..." crossorigin="anonymous" />
    <style>
        .custom-card {
            background-color: #fff;
            border: 1px solid #e2e8f0;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            transition: transform 0.2s ease-in-out;
            height: 100%;
        }

            .custom-card:hover {
                transform: translateY(-5px);
            }

            .custom-card .card-img-top {
                width: 100%;
                height: 200px;
                object-fit: fill;
            }

            .custom-card .card-body {
                padding: 1.25rem;
            }

            .custom-card .card-title {
                font-size: 1.25rem;
                font-weight: bold;
                margin-bottom: 0.75rem;
            }

            .custom-card .card-text {
                font-size: 1rem;
                color: #6c757d;
                margin-bottom: 1rem;
            }

            .custom-card .property-details {
                font-size: 0.95rem;
                color: #495057;
                line-height: 1.6;
            }

            .custom-card .card-footer {
                background-color: #f8f9fa;
                border-top: none;
                padding: 0.75rem;
                text-align: center;
            }

        .btn-create {
            background-color: #17a2b8;
            color: #fff;
            border-color: #17a2b8;
            transition: background-color 0.3s;
        }

            .btn-create:hover {
                background-color: #138496;
                border-color: #138496;
            }

        
    </style>

</head>
<body>
    <div class="container">
        
        @using (Html.BeginForm("GetAllFilteredProperties", "Property", FormMethod.Get))
        {
        <div class="row mb-3">
            <div class="col-md-2">
                <label><i class="fas fa-ruler-combined"></i> Full Area:</label>
                <input type="number" name="FullArea" value="@ViewData["CurrentFullAreaFilter"]" class="form-control form-control-sm" />
            </div>
            <div class="col-md-2">
                <label><i class="fas fa-dollar-sign"></i> Min Price:</label>
                <input type="number" name="MinPrice" value="@ViewData["CurrentMinPriceFilter"]" class="form-control form-control-sm" />
            </div>
            <div class="col-md-2">
                <label><i class="fas fa-dollar-sign"></i> Max Price:</label>
                <input type="number" name="MaxPrice" value="@ViewData["CurrentMaxPriceFilter"]" class="form-control form-control-sm" />
            </div>
            <div class="col-md-2">
                <label><i class="fas fa-sort"></i> Sort By:</label>
                <select name="sortOrder" class="form-control form-control-sm">
                    <option value="">-- Select --</option>
                    <option value="price-asc" selected="@(ViewData["CurrentSortFilter"]?.ToString() == "price-asc" ? "selected" : "")">Price (Low to High)</option>
                    <option value="price-desc" selected="@(ViewData["CurrentSortFilter"]?.ToString() == "price-desc" ? "selected" : "")">Price (High to Low)</option>
                </select>
            </div>
        </div>

        <div class="d-flex justify-content-between mb-3">
            <button type="button" class="btn btn-primary btn-sm" id="toggleAdditionalFilters">
                <i class="fas fa-plus"></i> More Filters
            </button>
            <div>
                <button type="submit" class="btn btn-info btn-sm"><i class="fas fa-filter"></i> Filter</button>
                <button type="button" class="btn btn-secondary btn-sm ml-2" id="clearFilters"><i class="fas fa-times"></i> Clear Filters</button>
            </div>
        </div>

        @Html.Partial("_AdditionalFilters")
        }
        
        <div class="row">
            @foreach (var item in Model)
            {
                <div class="col-lg-4 col-md-6 mb-4">
                    <div class="card custom-card">
                        <img class="card-img-top" src="@Url.Content("~/images/properties/" + item.MainImage)" alt="Property Image" width="100" />
                        <div class="card-body">
                            <h5 class="card-title">@Html.DisplayFor(modelItem => item.Name)</h5>
                            <p class="card-text">
                                @if (item.Description.Length > 100)
                                {
                                    var shortDescription = item.Description.Substring(0, 100);
                                    <span class="short">@Html.Raw(shortDescription)@Html.Raw("...")</span>
                                    <span class="more" style="display: none;">@Html.Raw(item.Description)</span>
                                    <a href="#" class="read-more-link">Read More</a>
                                }
                                else
                                {
                                    @Html.Raw(item.Description)
                                }
                            </p>

                            <div class="property-details">
                                <p><i class="fas fa-info-circle"></i> <strong>City:</strong> @Html.DisplayFor(modelItem => item.City)</p>
                                <p><i class="fas fa-dollar-sign"></i> <strong>Price:</strong> @Html.DisplayFor(modelItem => item.Price) $</p>
                                <p><i class="fas fa-ruler-combined"></i> <strong>Full Area:</strong> @Html.DisplayFor(modelItem => item.FullArea)</p>
                                <p><i class="fas fa-ruler-combined"></i> <strong>Price Per Meter:</strong> @Html.DisplayFor(modelItem => item.PricePerMeterSquared)</p>
                                <p><i class="fas fa-home"></i> <strong>Inside Area:</strong> @Html.DisplayFor(modelItem => item.InsideArea) </p>
                                <p><i class="fas fa-bed"></i> <strong>Bedrooms:</strong> @Html.DisplayFor(modelItem => item.BedroomCount)</p>
                                <p><i class="fas fa-bath"></i> <strong>Bathrooms:</strong> @Html.DisplayFor(modelItem => item.BathroomCount)</p>
                                <p><i class="fas fa-info-circle"></i> <strong>Status:</strong> @Html.DisplayFor(modelItem => item.Status)</p>
                                <p><i class="fas fa-file-alt"></i> <strong>Documentation:</strong> @Html.DisplayFor(modelItem => item.Documentation)</p>
                            </div>
                        </div>
                        <div class="card-footer">
                            @Html.ActionLink("Details", "Details", new { id = item.Id }, new { @class = "btn btn-info btn-sm mr-1" })
                            @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-primary btn-sm mr-1" })
                            @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "btn btn-danger btn-sm" })
                            <!-- Sell button using POST -->
                            <form asp-action="Sell" method="post" class="d-inline">
                                <input type="hidden" name="id" value="@item.Id" />
                                <button type="submit" class="btn btn-danger btn-sm">Sell</button>
                            </form>

                            <!-- SoftDelete button using POST -->
                            <form asp-action="SoftDelete" method="post" class="d-inline">
                                <input type="hidden" name="id" value="@item.Id" />
                                <button type="submit" class="btn btn-danger btn-sm">SoftDelete</button>
                            </form>
                            
                          @*   <button type="button" class="btn @((item.IsFavorite ? "btn-success" : "btn-warning")) btn-sm"
                                    onclick="toggleFavorite('@item.Id', this)">
                                <i class="fas fa-star"></i> Toggle Favorite
                            </button> *@
                            <form asp-controller="Favorite" asp-action="AddFavorite" method="post">
                                <input type="hidden" name="propertyId" value="@item.Id" />
                                <button type="submit" class="btn btn-sm btn-primary">Add to Favorites</button>
                            </form>


                        </div>
                    </div>
                </div>
            }
        </div>


        <div class="text-center">
            @if (User.IsInRole("Agent"))
            {
                <a asp-action="Create" class="btn btn-create btn-lg">Create New Property</a>
            }
            

        </div>

        <div class="text-right mt-4">
            @{

                var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
                var nextDisabled = !Model.HasNextPage ? "disabled" : "";
            }

            <a asp-action="Index"
               asp-route-pageIndex="@(Model.PageIndex - 1)"
               class="btn btn-outline-success @prevDisabled">
                Previous
            </a>
            <a asp-action="Index"
               asp-route-pageIndex="@(Model.PageIndex + 1)"
               class="btn btn-outline-success @nextDisabled">
                Next
            </a>
        </div>
    </div>

</body>
    @* <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script> *@
    @* <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.5.3/umd/popper.min.js"></script> *@
    @* <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script> *@
    @* *@
    @* <script> *@
    @*     $(document).ready(function () { *@
    @*         $('.more').hide(); *@
    @* *@
    @*         $('.read-more-link').click(function (e) { *@
    @*             e.preventDefault(); *@
    @*             var $this = $(this); *@
    @*             var $moreText = $this.prev('.more'); *@
    @*             $moreText.slideToggle(); *@
    @*             $this.text($moreText.is(':visible') ? 'Read Less' : 'Read More'); *@
    @*         }); *@
    @* *@
    @*         $('#clearFilters').click(function () { *@
    @*             window.location.href = '@Url.Action("Index", "Property")'; *@
    @*         }); *@
    @*     }); *@
    @* *@
    @*     @section Scripts { *@
    @*             <script src="https://code.jquery.com/jquery-3.6.0.min.js" ></script> *@
    @*     <script> *@
    @*         function toggleFavorite(id, button) { *@
    @*             $.post('/Property/ToggleFavorite', { id: id }) *@
    @*                 .done(function (data) { *@
    @*                     console.log('Toggle successful'); *@
    @*                     $(button).toggleClass('btn-warning btn-success'); // Ndryshoni klasën e butonit nga btn-warning në btn-success *@
    @*                 }) *@
    @*                 .fail(function (error) { *@
    @*                     console.error('Error toggling favorite:', error); *@
    @*                 }); *@
    @*         } *@
    @*     </script> *@
    @*      *@
    @*     } *@

@* <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script> *@
@* <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.5.3/umd/popper.min.js"></script> *@
@* <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script> *@
@* *@
@* <script> *@
@*     $(document).ready(function () { *@
@*         $('.more').hide(); *@
@* *@
@*         $('.read-more-link').click(function (e) { *@
@*             e.preventDefault(); *@
@*             var $this = $(this); *@
@*             var $moreText = $this.prev('.more'); *@
@*             $moreText.slideToggle(); *@
@*             $this.text($moreText.is(':visible') ? 'Read Less' : 'Read More'); *@
@*         }); *@
@* *@
@*         $('#clearFilters').click(function () { *@
@*             window.location.href = '@Url.Action("Index", "Property")'; *@
@*         }); *@
@* *@
@*         $("#toggleAdditionalFilters").click(function() { *@
@*             $("#additionalFilters").toggle(); *@
@*             $(this).find('i').toggleClass('fa-plus fa-minus'); *@
@*         }); *@
@* *@
@*         $("#clearFilters").click(function() { *@
@*             $('input[type="text"], input[type="number"]').val(''); *@
@*             $('select').prop('selectedIndex', 0); *@
@*         }); *@
@*     }); *@
@* *@
@*     function toggleFavorite(id, button) { *@
@*         $.post('/Property/ToggleFavorite', { id: id }) *@
@*             .done(function (data) { *@
@*                 console.log('Toggle successful'); *@
@*                 $(button).toggleClass('btn-warning btn-success'); *@
@*             }) *@
@*             .fail(function (error) { *@
@*                 console.error('Error toggling favorite:', error); *@
@*             }); *@
@*     } *@
@* </script> *@


<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.5.3/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<script>
    $(document).ready(function () {
        $('.more').hide();

        $('.read-more-link').click(function (e) {
            e.preventDefault();
            var $this = $(this);
            var $moreText = $this.prev('.more');
            $moreText.slideToggle();
            $this.text($moreText.is(':visible') ? 'Read Less' : 'Read More');
        });

        $('#clearFilters').click(function () {
            window.location.href = '@Url.Action("Index", "Property")';
        });

        $("#toggleAdditionalFilters").click(function() {
            $("#additionalFilters").toggle();
            $(this).find('i').toggleClass('fa-plus fa-minus');
            $('input[name="ShowAdditionalFilters"]').val($("#additionalFilters").is(":visible"));
        });

        $("#clearFilters").click(function() {
            $('input[type="text"], input[type="number"]').val('');
            $('select').prop('selectedIndex', 0);
            $("#additionalFilters").hide();
            $('input[name="ShowAdditionalFilters"]').val("false");
            $("#toggleAdditionalFilters").find('i').removeClass('fa-minus').addClass('fa-plus');
        });

        // Update button icon based on additional filters visibility
        if ($("#additionalFilters").is(":visible")) {
            $("#toggleAdditionalFilters").find('i').removeClass('fa-plus').addClass('fa-minus');
        }
    });

    function toggleFavorite(id, button) {
        $.post('/Property/ToggleFavorite', { id: id })
            .done(function (data) {
                console.log('Toggle successful');
                $(button).toggleClass('btn-warning btn-success');
            })
            .fail(function (error) {
                console.error('Error toggling favorite:', error);
            });
    }
</script>

</html>
