@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using NestAlbania.Data
@using NestAlbania.Services

@inject UserManager<ApplicationUser> UserManager
@inject INotificationService NotificationService

@{
    var user = await UserManager.GetUserAsync(User);
    var unreadNotifications = user != null ? await NotificationService.GetUnreadNotificationsAsync(user.Id) : new List<Notification>();
    var unreadCount = unreadNotifications.Count();
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="apple-touch-icon" sizes="76x76" href="~/assets/img/apple-icon.png">
    <link rel="icon" type="image/png" href="~/assets/img/favicon.png">
    <script src='https://kit.fontawesome.com/a076d05399.js' crossorigin='anonymous'></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700" rel="stylesheet" />
    <link href="~/assets/css/nucleo-icons.css" rel="stylesheet" />
    <link href="~/assets/css/nucleo-svg.css" rel="stylesheet" />
    <script src="https://kit.fontawesome.com/42d5adcbca.js" crossorigin="anonymous"></script>
    <link href="~/assets/css/nucleo-svg.css" rel="stylesheet" />
    <link id="pagestyle" href="~/assets/css/argon-dashboard.css?v=2.0.4" rel="stylesheet" />
    <style>
        input[type="number"]::-webkit-inner-spin-button,
        input[type="number"]::-webkit-outer-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }

        input[type="number"] {
            -moz-appearance: textfield;
        }
    </style>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            var inputs = document.getElementsByTagName('input');
            for (var i = 0; i < inputs.length; i++) {
                if (inputs[i].type === 'text') {
                    inputs[i].setAttribute('autocomplete', 'off');
                }
            }
        });
    </script>
</head>

<body class="g-sidenav-show   bg-gray-100">

@*     <div class="min-height-300 bg-primary position-absolute w-100"></div> *@
    <div class="min-height-300  position-absolute w-100"></div>

    <aside class="sidenav bg-white navbar navbar-vertical navbar-expand-xs border-0 border-radius-xl my-3 fixed-start ms-4 " id="sidenav-main">

        <div class="sidenav-header">
            <i class="fas fa-times p-3 cursor-pointer text-secondary opacity-5 position-absolute end-0 top-0 d-none d-xl-none" aria-hidden="true" id="iconSidenav"></i>
            <a class="navbar-brand m-0" target="_blank">
                <img src="~/assets/img/logo-ct-dark.png" class="navbar-brand-img h-100" alt="main_logo">
                <span class="ms-1 font-weight-bold">NEST ALBANIA</span>
            </a>
        </div>
        <hr class="horizontal dark mt-0">
        <div class="collapse navbar-collapse  w-auto " id="sidenav-collapse-main">

            <ul class="navbar-nav">
                <a class="nav-link @(ViewData["ActivePage"]?.ToString() == "dashboardIndex" ? "active" : "") dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="@(ViewData["ActivePage"]?.ToString() == "dashboardIndex" ? "true" : "false")">
                    <div class="icon icon-shape icon-sm border-radius-md text-center me-2 d-flex align-items-center justify-content-center">
                        <i class="ni ni-tv-2 text-primary text-sm opacity-10"></i>
                    </div>
                    <span class="nav-link-text ms-1">Dashboard</span>
                </a>

                <ul class="dropdown-menu @(ViewData["ActivePage"]?.ToString() == "propertyOverviewIndex" || ViewData["ActivePage"]?.ToString() == "dashboardIndex" ? "show" : "")" aria-labelledby="navbarDropdown">
                    <li>
                        <a class="dropdown-item @(ViewData["ActivePage"]?.ToString() == "propertyOverviewIndex" ? "highlight" : "")" href="@Url.Action("GetPropertyStatusData", "Home")">
                            <i class="fas fa-home"></i> Property Overview
                        </a>
                    </li>
                    <li>
                        <a class="dropdown-item @(ViewData["ActivePage"]?.ToString() == "dashboardIndex" ? "highlight" : "")" href="@Url.Action("Index", "Home")">
                            <i class="fas fa-tachometer-alt"></i> Dashboard
                        </a>
                    </li>
                </ul>


                
                <li class="nav-item">
                    <a class="nav-link @(ViewData["ActivePage"]?.ToString() == "propertyIndex" ? "active" : "")" href="@Url.Action("Index", "Property")">
                        <div class="icon icon-shape icon-sm border-radius-md text-center me-2 d-flex align-items-center justify-content-center">
                            <i class="fa fa-home text-success text-sm opacity-10"></i>
                        </div>
                        <span class="nav-link-text ms-1">Property</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link  @(ViewData["ActivePage"]?.ToString() == "agentIndex" ? "active" : "")" href="@Url.Action("Index", "Agent")">
                        <div class="icon icon-shape icon-sm border-radius-md text-center me-2 d-flex align-items-center justify-content-center">
                            <i class="fa fa-user text-success text-sm opacity-10"></i>
                        </div>
                        <span class="nav-link-text ms-1">Agent Profile</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link  @(ViewData["ActivePage"]?.ToString() == "favoriteIndex" ? "active" : "")" href="@Url.Action("Favorites", "Property")">
                        <div class="icon icon-shape icon-sm border-radius-md text-center me-2 d-flex align-items-center justify-content-center">
                            <i class="fa fa-heart text-warning text-sm opacity-10"></i>
                        </div>
                        <span class="nav-link-text ms-1">Favorites</span>
                    </a>
                </li>


            

            </ul>
        </div>

    </aside>
    <main class="main-content position-relative border-radius-lg ">
        <!-- Navbar -->    
        <nav class="navbar navbar-main navbar-expand-lg px-0 mx-4 shadow-none border-radius-xl " id="navbarBlur" data-scroll="false">
            <div class="container-fluid py-1 px-3">
                <nav aria-label="breadcrumb">
                </nav>
                <div class="collapse navbar-collapse mt-sm-0 mt-2 me-md-0 me-sm-4" id="navbar">
                  <div class="ms-md-auto pe-md-3 d-flex align-items-center"></div> 
                    <ul class="navbar-nav  justify-content-end">
                        @*                         <li class="nav-item d-flex align-items-center">
                            <a asp-action="GetAgentDetailsUser" asp-controller="Agent" class="nav-link text-white font-weight-bold px-0">
                                <i class="fa fa-user me-sm-1"></i>
                               
                            </a>
                        </li> *@
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" href="#" id="notificationDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        c        <i class="fas fa-bell"></i>
                                @if (unreadCount > 0)
                                {
                                <span class="badge bg-danger">@unreadCount</span>
                                }
                            </a>
                            <ul class="dropdown-menu dropdown-menu-end notification-dropdown" aria-labelledby="notificationDropdown" style="max-height: 300px; overflow-y: auto; width: 300px;">
                                @if (unreadNotifications.Any())
                                {
                                foreach (var notification in unreadNotifications)
                                {
                                <li>
                                    <div class="dropdown-item @(notification.IsRead ? "" : "unread")" style="white-space: normal;">
                                        <p>@notification.Message</p>
                                        <small>@notification.CreatedOn.ToString("g")</small>
                                        <button class="btn btn-sm btn-danger float-end delete-notification" data-id="@notification.Id">Delete</button>
                                    </div>
                                </li>
                                }
                                }
                                else
                                {
                                <li><div class="dropdown-item">No new notifications</div></li>
                                }
                            </ul>
                        </li>

                        <li class="nav-item d-flex align-items-center user-icon-container">
                            <a asp-action="GetAgentDetailsUser" asp-controller="Agent" class="nav-link text-white font-weight-bold px-0">
                                <i class="fa fa-user me-sm-1 user-icon" style="color: blue;"></i>
                            </a>
                            <form asp-controller="Account" asp-action="LogIn" method="post" class="logout-form">
                                <button type="submit" class="btn btn-link text-dark font-weight-bold p-0 logout-button" style="border: none; background: none;">
                                    LogOut
                                </button>
                            </form>
                        </li>
                      
                    </ul>
                </div>
            </div>
        </nav>
     
      
        <main role="main">
            @RenderBody()
        </main>
        <footer class="footer pt-3  ">
            <div class="container-fluid">
                <div class="row align-items-center justify-content-lg-between">
                    <div class="col-lg-6 mb-lg-0 mb-4">
                        <div class="copyright text-center text-sm text-muted text-lg-start">
                            © <script>
                                  document.write(new Date().getFullYear())
                            </script>,
                            <div style="display: inline-block;">
                                made with <i class="fa fa-heart" style="color: red;"></i> by
                                <p style="display: inline;">Nest Albania Team</p>
                               

                            </div>


                        </div>
                    </div>

                </div>
            </div>
        </footer>
    </main>
    <script src="~/assets/js/core/popper.min.js"></script>
    <script src="~/assets/js/core/bootstrap.min.js"></script>
    <script src="~/assets/js/plugins/perfect-scrollbar.min.js"></script>
    <script src="~/assets/js/plugins/smooth-scrollbar.min.js"></script>
    <script src="~/assets/js/plugins/chartjs.min.js"></script>
 <style>
   
        .highlight {
            background-color:lightcyan;
            border-left: 3px solid #007bff; 
            border-radius: 4px; 
        }

        .dropdown-item {
            display: flex;
            align-items: center;
            padding: 10px 15px;
            text-decoration: none;
            color: #333;
            transition: background-color 0.3s;
        }

            .dropdown-item:hover {
                background-color: #f0f0f0;
            }

            .dropdown-item i {
                margin-right: 10px;
            }

        .user-icon-container {
            position: relative;
            display: inline-block;
        }

        .user-icon {
            font-size: 24px;
            cursor: pointer;
        }

        .logout-form {
            display: none;
            position: absolute;
            top: 100%;
            right: 0;
            background-color: white;
            border: 1px solid #ccc;
            padding: 5px;
            border-radius: 5px;
            z-index: 1000;
        }

        .user-icon-container:hover .logout-form {
            display: block;
        }
    </style>
    <style>
        /* ... existing styles ... */

        .notification-dropdown {
            max-height: 300px;
            overflow-y: auto;
            width: 300px;
        }
        .notification-dropdown .dropdown-item {
            white-space: normal;
            padding: 10px;
            border-bottom: 1px solid #eee;
        }
        .notification-dropdown .unread {
            background-color: #f0f0f0;
        }
    </style>
    <script>
        var win = navigator.platform.indexOf('Win') > -1;
        if (win && document.querySelector('#sidenav-scrollbar')) {
            var options = {
                damping: '0.5'
            }
            Scrollbar.init(document.querySelector('#sidenav-scrollbar'), options);
        }
    </script>
    <script async defer src="https://buttons.github.io/buttons.js"></script>
    <script src="~/assets/js/argon-dashboard.min.js?v=2.0.4"></script>
    @await RenderSectionAsync("Scripts", required: false)


@* <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script> *@
@* <script src="~/lib/signalr/dist/browser/signalr.js"></script> *@

<!-- Include SignalR from CDN -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.6/signalr.min.js"></script>

<!-- Include jQuery -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function() {
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/notificationHub")
            .build();

        connection.on("ReceiveNotification", (message) => {
            updateNotifications();
        });

        connection.start().catch(err => console.error(err));

        function updateNotifications() {
            $.ajax({
                url: '@Url.Action("GetNotifications", "Notification")',
                method: 'GET',
                success: function(data) {
                    console.log('Notifications data:', data); // Debugging line
                    const dropdown = $('#notificationDropdown').next('ul');
                    dropdown.empty();
                    const unreadCount = data.filter(n => !n.isRead).length;
                    const badgeElement = $('#notificationDropdown .badge');
                    if (unreadCount > 0) {
                        badgeElement.text(unreadCount).show();
                    } else {
                        badgeElement.hide();
                    }
                    if (data.length > 0) {
                        data.forEach(notification => {
                            dropdown.append(`
                        <li>
                            <div class="dropdown-item ${notification.isRead ? '' : 'unread'}">
                                <p>${notification.message}</p>
                                <small>${new Date(notification.createdOn).toLocaleString()}</small>
                                <button class="btn btn-sm btn-danger float-end delete-notification" data-id="${notification.id}">Delete</button>
                            </div>
                        </li>
                    `);
                        });
                    } else {
                        dropdown.append('<li><div class="dropdown-item">No notifications</div></li>');
                    }
                },
                error: function(xhr, status, error) {
                    console.error('Error fetching notifications:', status, error); // Debugging line
                }
            });

    }

        $('#notificationDropdown').on('show.bs.dropdown', function () {
            $.ajax({
                url: '@Url.Action("MarkAsRead", "Notification")',
                method: 'POST',
                success: function() {
                    updateNotifications();
                },
                error: function(xhr, status, error) {
                    console.error('Error marking notifications as read:', status, error); // Debugging line
                    alert("Error marking notifications as read");
                }
            });
        });

        $(document).on('click', '.delete-notification', function(e) {
            e.stopPropagation();
            const notificationId = $(this).data('id');
            $.ajax({
                url: '@Url.Action("DeleteNotification", "Notification")',
                method: 'POST',
                data: { id: notificationId },
                success: function() {
                    updateNotifications();
                },
                error: function(xhr, status, error) {
                    console.error('Error deleting notifications:', status, error); // Debugging line
                    alert("Error deleting notifications");
                }
            });
        });

        updateNotifications();
    });
</script>
    
    </body>

</html>